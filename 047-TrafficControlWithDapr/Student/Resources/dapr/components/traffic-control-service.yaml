kind: Service
apiVersion: v1
metadata:
  name: traffic-control-service 
  labels:
    app: traffic-control-service
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3500
  selector:
    app: traffic-control-service

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traffic-control-service
  labels:
    app: traffic-control-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traffic-control-service
  template:
    metadata:
      labels:
        app: traffic-control-service
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "trafficcontrolservice"
        dapr.io/app-port: "6000"
        dapr.io/log-level: "debug"
        dapr.io/sidecar-cpu-request: "100m"
        dapr.io/sidecar-memory-request: "250Mi"
        dapr.io/sidecar-cpu-limit: "300m"
        dapr.io/sidecar-memory-limit: "1000Mi"
        dapr.io/config: "zipkin"
    spec:
      containers:
      - name: traffic-control-service
        image: crdaprusscdemo.azurecr.io/trafficcontrolservice:assignment08
        ports:
        - containerPort: 6000
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 1000m
            memory: 200Mi
        livenessProbe:
          httpGet:
            path: v1.0/healthz
            port: 3500
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds : 5
          failureThreshold : 3
        readinessProbe:
          httpGet:
            path: v1.0/healthz
            port: 3500
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds : 5
          failureThreshold: 3
      imagePullSecrets:
      - name: dapr-acr-pull-secret
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: traffic-control-service
  annotations:
    kubernetes.io/ingress.class: addon-http-application-routing
spec:
  rules:
  - host: traffic-control-service.e13e6fb6d2534a41ae60.southcentralus.aksapp.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service: 
            name: traffic-control-service
            port: 
              number: 80
              